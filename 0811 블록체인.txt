08.11 블록체인 강의 2일차

git - 프로그램 자체 / github - 원격 저장소를 서비스 하는 곳
개발자가 github를 사용하는 이유
보편화, 호환성이 좋다
파일 공유 시 이전에 수정 되었던 부분까지 확인 가능함(기존의 덮어쓰기 시 사라지는 이전 내용들이 공유됨)
원격 저장소 보유

깃허브 세팅
깃 설치 - 64 스탠드얼론으로

깃허브 저장소를 생성하고 나면 저장소에 접근할 수 있는 도메인이 생성됨

cmd 창에서 버전확인, 생성한 github 아이디 등록해주기

C:\Users\KGA_22>git -v
git version 2.37.1.windows.1

C:\Users\KGA_22>git config --global user.name kawonlee

C:\Users\KGA_22>git config --global user.email shadow4634@naver.com

add . < 변경된 모든 파일을 올리겠다

commit -> index에 작업한 내용을 올리는 것(add로 올린)
commit -m(메시지) "" < 뒤의 내용을 메시지로 넣어주겠다

내 컴퓨터 저장소에 저장 됨

branch -> 각자의 작업 공간

push -> 원격 저장소에 저장된다(원격저장소에 밀어넣는다) 100mb 제한

git remote add origin https://github.com/kawonlee/blockchain777.git -> 원격 저장소에 연결

git remote - 원격 저장소 관련 명령어
add - 추가한다
origin - 원격 저장소의 이름
뒤의 url - 저장소 url

checkout 다른 곳으로 이동

checkout -b develop -> develop을 만들어 그 branch로 이동하겠다

git branch 목록이 나오고 *이 있는건 사용하고 있는 branch
C:\Users\KGA_22\Documents\testfile>git branch
* develop
  master


branch 마다 등록된 파일들이 자동으로 바뀐다
ex) master 에는 파일 내용이 한줄, develop에는 파일 내용이 두줄이면, checkout으로 branch를 변경했을 때, master branch의 경우 파일이 한줄, develop branch의 경우 파일이 두줄으로 자동으로 바뀐다.(window에 생성한 파일 위치의 파일 내용이)

git 은 파일에 대해 3가지 분류가 있음

변경된(한)파일   ->   add    -> [  index  ]    -> commit 

   -> 내 저장소    -> push    -> 원격 저장소

다운받는법(원격저장소)
pull, fetch, rebase
fetch >> pull
fetch = git log를 다운(변경된 내용)
pull = 변경된 파일을 다운


git checkout -b new
내 저장소(내 PC)에서 작업공간을 나누는 것

commit 까지 하지 않는 이상 아무리 작업해도 내 저장소에 저장이 안됨
add를 통해 index에 추가 -> index에 추가 된 것을 commit을 통해 내 저장소에 직접적으로 저장 -> push를 통해 원격 저장소(다른사람들도 볼 수 있는)에 등록


참고 사이트 
https://evan-moon.github.io/2019/07/25/git-tutorial/

github desktop
https://desktop.github.com/

클론을 만들어 사용 가능하며, gui라 직관적이다.

